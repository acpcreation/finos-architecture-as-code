name: Sonatype SCA Scanning for AaC

on:
  workflow_dispatch:
  pull_request_target:
  push:

env:
  SonatypeUrl: "https://finos.sonatype.app/platform/"
  SonatypeAppId: "aac"
  ExcludeDirectory: ""

jobs:
  scan-java:
    name: Build and Scan Java
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # java-version: [ '21' ]
        module-folder: ['translator', 'calm-hub']
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: 21
          cache: maven
          distribution: 'adopt'
      
      - name: Build with Maven
        working-directory: ${{ matrix.module-folder }}
        run: |
          mvn clean install -Dmaven.test.skip=true
          
      - name: Sonatype Lifecycle SCA Scan
        # if: github.repository_owner == 'finos'
        id: evaluate
        uses: sonatype/actions/evaluate@v1
        with:
          iq-server-url: ${{ env.SonatypeUrl }}
          username: ${{ secrets.SONATYPE_SCANNER_USERNAME }}
          password: ${{ secrets.SONATYPE_SCANNER_PASSWORD }}
          application-id: ${{ env.SonatypeAppId }}-${{ matrix.module-folder }}
          stage: "build"
          scan-targets: ${{ matrix.module-folder }}/target/
          module-exclude: ${{ env.ExcludeDirectory }}
          sarif-file: sonatype-results.sarif
          upload-sarif-file: true
          
      - name: Save Sonatype SBOM
        if: steps.evaluate.outputs.scan-id && always() 
        uses: sonatype/actions/fetch-sbom@v1
        with:
          iq-server-url: ${{ env.SonatypeUrl }}
          username: ${{ secrets.SONATYPE_SCANNER_USERNAME }}
          password: ${{ secrets.SONATYPE_SCANNER_PASSWORD }}
          application-id: ${{ env.SonatypeAppId }}-${{ matrix.module-folder }}
          scan-id: ${{ steps.evaluate.outputs.scan-id }}
          sbom-standard: spdx
          sbom-version: 2.3
          artifact-name: ${{ env.SonatypeAppId }}-${{ matrix.module-folder }}-sonatype-bom
          
        
  scan-javascript:
    name: Build and Scan JavaScript
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module-folder: ['cli', 'docs', 'shared']
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Build with NPM 
        working-directory: ${{ matrix.module-folder }}
        run: |
          npm config set package-lock true
          npm i --package-lock-only

        # npm install --omit=dev

      - name: TEST
        working-directory: ${{ matrix.module-folder }}
        run: |
          ls -al
          
      - name: Sonatype Lifecycle SCA Scan
        # if: github.repository_owner == 'finos'
        id: evaluate
        uses: sonatype/actions/evaluate@v1
        with:
          iq-server-url: ${{ env.SonatypeUrl }}
          username: ${{ secrets.SONATYPE_SCANNER_USERNAME }}
          password: ${{ secrets.SONATYPE_SCANNER_PASSWORD }}
          application-id: ${{ env.SonatypeAppId }}-${{ matrix.module-folder }}
          stage: "build"
          scan-targets: ${{ matrix.module-folder }}/*.json ${{ matrix.module-folder }}/pom.xml
          module-exclude: ${{ env.ExcludeDirectory }} 
          # upload-sarif-file: true
  
      - name: Save Sonatype SBOM
        if: steps.evaluate.outputs.scan-id && always() 
        uses: sonatype/actions/fetch-sbom@v1
        with:
          iq-server-url: ${{ env.SonatypeUrl }}
          username: ${{ secrets.SONATYPE_SCANNER_USERNAME }}
          password: ${{ secrets.SONATYPE_SCANNER_PASSWORD }}
          application-id: ${{ env.SonatypeAppId }}-${{ matrix.module-folder }}
          scan-id: ${{ steps.evaluate.outputs.scan-id }}
          sbom-standard: spdx
          sbom-version: 2.3
          artifact-name: ${{ env.SonatypeAppId }}-${{ matrix.module-folder }}-sonatype-bom
      

        
     
        



    
